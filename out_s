==31006== Memcheck, a memory error detector
==31006== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==31006== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==31006== Command: ./server 0.0.0.0 8080
==31006== Parent PID: 17206
==31006== 
==31006== Thread 675:
==31006== Invalid read of size 1
==31006==    at 0x4C32E03: strcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x109CA8: tokenize(char*, long) (server_multithreaded.cpp:193)
==31006==    by 0x109DE7: read_client(int, int*) (server_multithreaded.cpp:223)
==31006==    by 0x109EDD: handle_request(int) (server_multithreaded.cpp:251)
==31006==    by 0x10A43E: service_request(void*) (server_multithreaded.cpp:390)
==31006==    by 0x53E46DA: start_thread (pthread_create.c:463)
==31006==    by 0x571D88E: clone (clone.S:95)
==31006==  Address 0x5dda4e6 is 0 bytes after a block of size 6 alloc'd
==31006==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x109B0E: tokenize(char*, long) (server_multithreaded.cpp:171)
==31006==    by 0x109DE7: read_client(int, int*) (server_multithreaded.cpp:223)
==31006==    by 0x109EDD: handle_request(int) (server_multithreaded.cpp:251)
==31006==    by 0x10A43E: service_request(void*) (server_multithreaded.cpp:390)
==31006==    by 0x53E46DA: start_thread (pthread_create.c:463)
==31006==    by 0x571D88E: clone (clone.S:95)
==31006== 
==31006== Invalid write of size 1
==31006==    at 0x4C32E0D: strcpy (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x109CA8: tokenize(char*, long) (server_multithreaded.cpp:193)
==31006==    by 0x109DE7: read_client(int, int*) (server_multithreaded.cpp:223)
==31006==    by 0x109EDD: handle_request(int) (server_multithreaded.cpp:251)
==31006==    by 0x10A43E: service_request(void*) (server_multithreaded.cpp:390)
==31006==    by 0x53E46DA: start_thread (pthread_create.c:463)
==31006==    by 0x571D88E: clone (clone.S:95)
==31006==  Address 0x5dda536 is 0 bytes after a block of size 6 alloc'd
==31006==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x109C79: tokenize(char*, long) (server_multithreaded.cpp:192)
==31006==    by 0x109DE7: read_client(int, int*) (server_multithreaded.cpp:223)
==31006==    by 0x109EDD: handle_request(int) (server_multithreaded.cpp:251)
==31006==    by 0x10A43E: service_request(void*) (server_multithreaded.cpp:390)
==31006==    by 0x53E46DA: start_thread (pthread_create.c:463)
==31006==    by 0x571D88E: clone (clone.S:95)
==31006== 
==31006== Invalid read of size 1
==31006==    at 0x4C33DC4: strcmp (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x109EFE: handle_request(int) (server_multithreaded.cpp:256)
==31006==    by 0x10A43E: service_request(void*) (server_multithreaded.cpp:390)
==31006==    by 0x53E46DA: start_thread (pthread_create.c:463)
==31006==    by 0x571D88E: clone (clone.S:95)
==31006==  Address 0x5dda536 is 0 bytes after a block of size 6 alloc'd
==31006==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x109C79: tokenize(char*, long) (server_multithreaded.cpp:192)
==31006==    by 0x109DE7: read_client(int, int*) (server_multithreaded.cpp:223)
==31006==    by 0x109EDD: handle_request(int) (server_multithreaded.cpp:251)
==31006==    by 0x10A43E: service_request(void*) (server_multithreaded.cpp:390)
==31006==    by 0x53E46DA: start_thread (pthread_create.c:463)
==31006==    by 0x571D88E: clone (clone.S:95)
==31006== 
==31006== Conditional jump or move depends on uninitialised value(s)
==31006==    at 0x109E53: free_token(char**) (server_multithreaded.cpp:234)
==31006==    by 0x109F0E: handle_request(int) (server_multithreaded.cpp:258)
==31006==    by 0x10A43E: service_request(void*) (server_multithreaded.cpp:390)
==31006==    by 0x53E46DA: start_thread (pthread_create.c:463)
==31006==    by 0x571D88E: clone (clone.S:95)
==31006==  Uninitialised value was created by a heap allocation
==31006==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x109AFE: tokenize(char*, long) (server_multithreaded.cpp:170)
==31006==    by 0x109DE7: read_client(int, int*) (server_multithreaded.cpp:223)
==31006==    by 0x109EDD: handle_request(int) (server_multithreaded.cpp:251)
==31006==    by 0x10A43E: service_request(void*) (server_multithreaded.cpp:390)
==31006==    by 0x53E46DA: start_thread (pthread_create.c:463)
==31006==    by 0x571D88E: clone (clone.S:95)
==31006== 
==31006== 
==31006== HEAP SUMMARY:
==31006==     in use at exit: 209,728 bytes in 691 blocks
==31006==   total heap usage: 703 allocs, 12 frees, 283,593 bytes allocated
==31006== 
==31006== Thread 1:
==31006== 288 bytes in 1 blocks are possibly lost in loss record 5 of 7
==31006==    at 0x4C31B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x40134A6: allocate_dtv (dl-tls.c:286)
==31006==    by 0x40134A6: _dl_allocate_tls (dl-tls.c:530)
==31006==    by 0x53E5227: allocate_stack (allocatestack.c:627)
==31006==    by 0x53E5227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==31006==    by 0x10A4F1: main (server_multithreaded.cpp:409)
==31006== 
==31006== 197,280 bytes in 685 blocks are possibly lost in loss record 7 of 7
==31006==    at 0x4C31B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==31006==    by 0x40134A6: allocate_dtv (dl-tls.c:286)
==31006==    by 0x40134A6: _dl_allocate_tls (dl-tls.c:530)
==31006==    by 0x53E5227: allocate_stack (allocatestack.c:627)
==31006==    by 0x53E5227: pthread_create@@GLIBC_2.2.5 (pthread_create.c:644)
==31006==    by 0x10A542: main (server_multithreaded.cpp:415)
==31006== 
==31006== LEAK SUMMARY:
==31006==    definitely lost: 0 bytes in 0 blocks
==31006==    indirectly lost: 0 bytes in 0 blocks
==31006==      possibly lost: 197,568 bytes in 686 blocks
==31006==    still reachable: 12,160 bytes in 5 blocks
==31006==         suppressed: 0 bytes in 0 blocks
==31006== Reachable blocks (those to which a pointer was found) are not shown.
==31006== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==31006== 
==31006== For counts of detected and suppressed errors, rerun with: -v
==31006== ERROR SUMMARY: 12 errors from 6 contexts (suppressed: 0 from 0)
